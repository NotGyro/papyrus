name: Rust

on: [push, pull_request]

jobs:
  all-features:
    strategy:
      matrix:
        name: [default-features, no-features]
        os: [ubuntu-latest, windows-latest]
        rust: [nightly, stable, 1.34.0]
        run: [false]
        include:
          - name: default-features
            rust: nightly
            run: true
            rust-components: rustfmt
            cmd: cargo test
          - name: no-features
            run: true
            cmd: cargo test --no-default-features
               
    name: ${{ matrix.name }} with ${{ matrix.rust }} on ${{ matrix.os }}
    
    runs-on: ${{ matrix.os }}
    if: matrix.run
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: ${{ matrix.rust-components }}
      
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
     
    - name: Build external crate test dependency
      run: |
        cd test-resources/external_crate
        cargo build
        cd ../..
        
    - name: Run tests
      run: ${{ matrix.cmd }}
